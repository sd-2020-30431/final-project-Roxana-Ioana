// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NatureStoreWebApp.Model;

namespace NatureStoreWebApp.Migrations
{
    [DbContext(typeof(ProductContext))]
    [Migration("20200517210803_Many to many 3")]
    partial class Manytomany3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("NatureStoreWebApp.Model.Disease", b =>
                {
                    b.Property<int>("Id_disease")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id_disease");

                    b.ToTable("Diseases");
                });

            modelBuilder.Entity("NatureStoreWebApp.Model.Ingredient", b =>
                {
                    b.Property<int>("Id_ingredient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id_ingredient");

                    b.ToTable("Ingredients");
                });

            modelBuilder.Entity("NatureStoreWebApp.Model.Product", b =>
                {
                    b.Property<int>("Id_product")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Administration")
                        .IsRequired()
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id_product");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("NatureStoreWebApp.Model.ProductIngredient", b =>
                {
                    b.Property<int>("Id_product")
                        .HasColumnType("int");

                    b.Property<int>("Id_ingredient")
                        .HasColumnType("int");

                    b.HasKey("Id_product", "Id_ingredient");

                    b.HasIndex("Id_ingredient");

                    b.ToTable("ProductIngredient");
                });

            modelBuilder.Entity("NatureStoreWebApp.Model.ProductIngredient", b =>
                {
                    b.HasOne("NatureStoreWebApp.Model.Ingredient", "Ingredient")
                        .WithMany("ProductIngredient")
                        .HasForeignKey("Id_ingredient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NatureStoreWebApp.Model.Product", "Product")
                        .WithMany("ProductIngredient")
                        .HasForeignKey("Id_product")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
